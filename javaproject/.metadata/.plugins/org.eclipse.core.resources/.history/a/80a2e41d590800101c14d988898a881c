package day0324;

import java.awt.Color;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import day0319.DBConnect;

public class SwingScoreDB extends JFrame implements ActionListener{

	AddScore addScore=new AddScore("성적추가폼");
	
	Container cp;
	DBConnect db = new DBConnect();
	JTable table;
	DefaultTableModel model;
	JButton btnAdd,btnUpdate,btnDel;
	
	//디자인
	public void initDesigin()
	{
		String [] title= {"번호","이름","반","Java","Jsp","Spring","총점","합계"};
		JPanel pTop=new JPanel();
		this.add("North",pTop);
		
		model=new DefaultTableModel(title, 0);
		table=new JTable(model);
		this.add("Center", new JScrollPane(table));
		
		//테이블에 db데이터 출력
		selectTableWrite();
		
		btnAdd=new JButton("성적추가");
		btnAdd.addActionListener(this);
		pTop.add(btnAdd);
		
		btnUpdate=new JButton("성적수정");
		btnUpdate.addActionListener(this);
		pTop.add(btnUpdate);
		
		btnDel=new JButton("성적삭제");
		btnDel.addActionListener(this);
		pTop.add(btnDel);
		
		
		//addscore에있는 추가버튼에 이벤트를 추가하
		addScore.btnAdd.addActionListener(this);
		
	}
	
	
	/////////////////테이블 출력하는 메서드
	public void selectTableWrite()
	{
		//테이블초기화
		model.setRowCount(0);
		
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		
		String sql="select * from stuscore order by num";
		
		try {
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery();
			
			while(rs.next())
			{
				Vector<String> data=new Vector<String>();
				data.add(rs.getString("num"));
				data.add(rs.getString("name"));
				data.add(rs.getString("ban"));
				data.add(rs.getString("java"));
				data.add(rs.getString("jsp"));
				data.add(rs.getString("spring"));
				data.add(rs.getString("total"));
				data.add(rs.getString("average"));
				
				//테이블에 추가
				model.addRow(data);
				
				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(rs, pstmt, conn);
		}
	}
	
	//이벤트
	@Override
	public void actionPerformed(ActionEvent e) {
		// 각 버튼에 대한 이벤트
		Object ob=e.getSource();
		
		if(ob==btnAdd)
		{
			addScore.setVisible(true);
			//System.out.println("add");
		}else if(ob==btnDel)
		{
			System.out.println("del");
		}else if(ob==btnUpdate)
		{
			System.out.println("update");
		}
		
		
		
	}

	public SwingScoreDB(String title) {
			super(title);  //JFrame 부모생성자를 통해서 창제목을 통해서 제목을 보게하자
			
			//위치 너비
			this.setBounds(1200, 100, 600, 500);
					
			cp=this.getContentPane();
			this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			cp.setBackground(Color.white);
			initDesigin();
			this.setVisible(true);
		}
	
		

		public static void main(String[] args) {
			
			SwingScoreDB sw1 = new SwingScoreDB("스윙기본 #1");
			
			
			
		}
}
