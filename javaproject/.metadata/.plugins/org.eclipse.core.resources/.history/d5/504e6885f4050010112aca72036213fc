package day0321;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

import day0319.DBConnect;

public class ShopTest {
	
	DBConnect db=new DBConnect();
	Scanner sc = new  Scanner(System.in);
	
	
	public void insertSangpum()
	{
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		
		
		System.out.println("1.음료 2.과자");
		int type=Integer.parseInt(sc.nextLine());
		System.out.println("상품명?");
		String sname=sc.nextLine();
		System.out.println("수량?");
		int su=Integer.parseInt(sc.nextLine());
		System.out.println("단가?");
		int dan=Integer.parseInt(sc.nextLine());
		
		//PreparedStatement 객체는 미완의 sql문을 작성할수 있따
		//변수를 ?로 표시후 나중에 바인딩 시켜준다
		String sql="insert into sales values(seq_test.nextval,?,?,?,?,sysdate)";
		
		try {
			pstmt=conn.prepareStatement(sql);
			
			//?순서대로 바인딩후 업데이트
			pstmt.setString(1, type==1?"음료":"과자");
			pstmt.setString(2, sname);
			pstmt.setInt(3, su);
			pstmt.setInt(4, dan);
			
			int n=pstmt.executeUpdate();
			
			if(n==1)
				System.out.println("인서트 성공");
			else
				System.out.println("인서트 실패");
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(pstmt, conn);
		}
		
		
			
	}
	
	//출력
	//시퀀스    카테고리    상품명   수량   단가   입고일
	public void selectSangpum()
	{
		
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		
		String sql="select * from sales order by num";
		
		try {
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery(sql);
			
			System.out.println("시퀀스\t타입\t상품명\t수량\t단가\t입고일");
			System.out.println("=========================================================");
			
			while(rs.next())
			{
				System.out.println(rs.getInt("num")+"\t"+rs.getString("type")+"\t"+rs.getString("sangpum")
				+"\t"+rs.getInt("su")+"\t"+rs.getInt("price")+"\t"+rs.getDate("ipgoday"));		
			}
			
				
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(rs, pstmt, conn);
		}
		
	}
	//시퀀스 선택해서 삭제하도록
	public void deleteSangpum()
	{
		
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		
		System.out.println("삭제할 시퀀스는?");
		int num=Integer.parseInt(sc.nextLine());
		
		String sql="delete from sales where num=?";
		
		try {
			pstmt=conn.prepareStatement(sql);
			
			//바인딩
			pstmt.setInt(1, num);
			
			int n=pstmt.executeUpdate();
			
			if(n==1)
				System.out.println("삭제성공!!!");
			else
				System.out.println("삭제실패!!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(pstmt, conn);
		}
		
		
	}
	
	//수정...메서드 2개  1.num을 인자로 받아서 있는지없는지 반환  2.수정
	public boolean isOneData(int num)
	{
		boolean b=false;
		
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		
		String sql="select * from sales where num=?";
		
		try {
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1, num);
			rs=pstmt.executeQuery();
			
			//if_1개만 조회할경우는 if
			if(rs.next())//데이터가 있는경우
			{
				b=true;
			}
			else //데이터가 없는경우
				b=false;
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return b;
	}
	
	
	public void updateSangpum()
	{
		System.out.println("수정할 시퀀스는?");
		int num=Integer.parseInt(sc.nextLine());
		System.out.println("1.음료 2.과자");
		int type=Integer.parseInt(sc.nextLine());
		System.out.println("상품명?");
		String sname=sc.nextLine();
		System.out.println("수량?");
		int su=Integer.parseInt(sc.nextLine());
		System.out.println("단가?");
		int dan=Integer.parseInt(sc.nextLine());
		
		
		Connection conn=db.getConnection();
	    PreparedStatement pstmt=null;
	    
	    
	    String sql="update sales set type=?,sangpum=?,su=?,price=? where num="+num;
	    
	    try {
			pstmt=conn.prepareStatement(sql);
			
			
			pstmt.setString(1, type==1?"음료":"과자");
			pstmt.setString(2, sname);
			pstmt.setInt(3, su);
			pstmt.setInt(4, dan);
			
			int n=pstmt.executeUpdate();
			
			if(n==1)
				System.out.println("업데이트 성공");
			else
				System.out.println("업데이트 실패");
				
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(pstmt, conn);
		}
		
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		ShopTest sh=new ShopTest();
		Scanner sc=new Scanner(System.in);
		
		int n;
		while(true)
		{
			System.out.println("**상품입고**");
			System.out.println("1.상품추가 2.상품삭제  3.상품수정  4.재고출력  9.종료");
			n=Integer.parseInt(sc.nextLine());
			
			if(n==1)
				sh.insertSangpum();
			else if(n==2)
				sh.deleteSangpum();
			else if(n==3)
				sh.updateSangpum();
			else if(n==4)
				sh.selectSangpum();
			else if(n==9)
			{
				System.out.println("프로그램 종료");
				break;
			}
			
		}
		
	}

}
